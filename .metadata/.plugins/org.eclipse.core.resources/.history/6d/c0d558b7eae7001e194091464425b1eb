#include "KalmanRollPitch.h"

//[p,q,r]-> roll,pitch,yaw
void KalmanRollPitch_Init(KalmanRollPitch* kal,float Pinit,float *Q,float *R)
{
	kal->phi_rad = 0.0f;
	kal->theta_rad=0.0f;

	kal->P[0]=Pinit;kal->P[1]=0.0f;
	kal->P[2]=0.0f; kal->P[3]=Pinit;

	kal->Q[0]=Q[0]; kal->Q[1]=Q[1];
	kal->R[0]=R[0];kal->R[1]=R[1];kal->R[2]=R[2];

}


void KalmanRollPitch_Predict(KalmanRollPitch* kal,float* gyr_rps,float T)
{
	float p=gyr_rps[0];
	float q=gyr_rps[1];
	float r=gyr_rps[2];

	// Prediction

	// Compute sin(phi), cos(phi), tan(theta)
	float sp=sin(kal->phi_rad);
	float cp=cos(kal->phi_rad);
	float tt=tan(kal->theta_rad);
	// x+ = x- +T*f(x,u) * /
	kal->phi_rad=kal->phi_rad+T*(p+tt*(q*sp+r*cp));
	kal->theta_rad=kal->theta_rad+T*(q*cp-r*sp);

	// Recompute trig terms using new state estimates
	sp=sin(kal->phi_rad);
	cp=cos(kal->phi_rad);
	float st=sin(kal->theta_rad);
	float ct=cos(kal->theta_rad);
	tt=st/ct;
}



void KalmanRollPitch_Update(KalmanRollPitch* kal,float *acc_mps2);
